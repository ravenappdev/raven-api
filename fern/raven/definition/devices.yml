# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  ids: ids.yml

services:
  http:
    DevicesService:
      auth: true
      base-path: /v1/apps
      endpoints:
        addDevice:
          docs: | 
            Add Device for a User. 
            If no device_sid is specified, then a new device will be created. 
            If a device_sid is specified, then devices will be merged if one is found.
          method: POST
          path: /{app_id}/users/{user_id}/devices
          path-parameters:
            app_id:
              type: ids.AppId
              docs: your app identifier
            user_id:
              type: ids.UserId
              docs: your user identifier
          request: Device
          response: 
            type: Device
            docs: Returns the updated Device
          errors: 
            - ids.AppNotFoundError
            - ids.UserNotFoundError

        updateDevice:
          docs: Updates Device for a User
          method: PUT
          path: /{app_id}/users/{user_id}/devices/{device_id}
          path-parameters:
            app_id:
              type: ids.AppId
              docs: your app identifier
            user_id:
              type: ids.UserId
              docs: your user identifier
            device_id:
              type: ids.DeviceId
              docs: your device identifier
          request: Device
          response: 
            type: Device
            docs: Returns the updated Device
          errors: 
            - ids.AppNotFoundError
            - ids.UserNotFoundError
            - ids.DeviceNotFoundError

        deleteDevice:
          docs: Delete Device for a User
          method: DELETE
          path: /{app_id}/users/{user_id}/devices/{device_id}
          path-parameters:
            app_id:
              type: ids.AppId
              docs: your app identifier
            user_id:
              type: ids.UserId
              docs: your user identifier
            device_id:
              type: ids.DeviceId
              docs: your device identifier
          errors: 
            - ids.AppNotFoundError
            - ids.UserNotFoundError
            - ids.DeviceNotFoundError
        
        getDevice: 
          docs: Get Device for a User
          method: GET
          path: /{app_id}/users/{user_id}/devices/{device_id}
          path-parameters:
            app_id:
              type: ids.AppId
              docs: your app identifier
            user_id:
              type: ids.UserId
              docs: your user identifier
            device_id:
              type: ids.DeviceId
              docs: your device identifier
          response: Device
          errors: 
            - ids.AppNotFoundError
            - ids.DeviceNotFoundError

types:
  
  Device:
    properties:
      id: optional<string>
      platform: optional<Platform>
      onesignal_player_id: optional<string>
      fcm_token: optional<string>
      xiaomi_token: optional<string>
      oppo_token: optional<string>
      vivo_token: optional<string>
      huaweiToken: optional<string> 
      
      # Should this property be removed? 
      # Feels like there may be some internals leaked here.
      raven_id: 
        type: optional<string>
        docs: user id affiliated with device

      # 1) Same thought as User in users.yml. 
      #    Should the API have different Request/Response objects and device_sid would 
      #    only live on the response. 
      # 2) Based on the code in RavenUserDeviceControllerImpl.java it looks like 
      #    device_sid is used for querying (unlike for user it is user_id). 
      # 3) In the users api, the client is responsible for creating identifiers. But,
      #    for devices, the server is doing the job. Why this inconsistency? 
      device_sid: optional<ids.DeviceId>

      notifications_disabled: optional<boolean>

      # Same thought as User in users.yml.
      # Should the API have different Request/Response objects and created_at and 
      # updated_at would only live on the response. 
      created_at: optional<long>

      updated_at: optional<long>

  Platform:
    enum:
      - ANDROID
      - WEB
      - IOS
