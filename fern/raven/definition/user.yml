# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  ids: ids.yml
  device: device.yml

services:
  http:
    UserService:
      auth: true
      base-path: /v1/apps
      endpoints:

        createOrUpdate:
          docs: Creates an AppUser if doesn't exist already, or updates user properties
          method: POST
          path: /{app_id}/users
          path-parameters:
            app_id: ids.AppId
          request: RavenUser
          response:
            type: RavenUser
            docs: Returns updated or newly created user.
          errors:
            - ids.AppNotFoundError

        get:
          docs: Gets the requested user
          method: GET
          path: /{app_id}/users/{user_id}
          path-parameters:
            app_id:
              type: ids.AppId
              docs: your app identifier
            user_id:
              type: ids.UserId
              docs: your user identifier
          response: RavenUser
          errors:
            - ids.AppNotFoundError
            - ids.UserNotFoundError

types:
  RavenUser:
    properties:
      user_id:
        type: ids.UserId
        docs: |
          Your user identifier. 
          if user_id already exists, user properties will be updated else a new user will be created

      # Based on reading code in RavenUserControllerImpl.java it looks like
      # user_sid should only be set by the server on user creation.
      # It may be better design to have a different request and response object for
      # createOrUpdate endpoint b/c the current API makes it feel like
      # user_sid can be modified on update.
      user_sid: optional<string>

      onesignal_external_id: optional<string>
      mobile:
        type: optional<string>
      email:
        type: optional<string>
      whatsapp_mobile:
        type: optional<string>
        docs: Include this only when user's whatsapp mobile is different than primary
          mobile
      fcm_topic: optional<list<string>>
      fcm_device_group: optional<list<string>>
      slack: optional<SlackProfile>
      in_app: optional<InAppProfile>
      telegram: optional<TelegramProfile>
      fcm_tokens: optional<list<string>>
      onesignal_player_ids: optional<list<string>>
      ios_tokens: optional<list<string>>
      available_channels: optional<list<Channel>>
      devices: list<device.Device>
      user_preferences: optional<UserPreferences>

      # The created and updated at fields should only be modified by the server.
      # Adding these in the request body communicates that a user can modify these
      # properties. Another use case for different request / response types.
      created_at: optional<long>
      updated_at: optional<long>

  SlackProfile:
    properties:
      access_token: string
      email: string
      channel_id: string

  InAppProfile:
    properties:
      last_open: string # string is a JDBC timestamp. format is yyyy-[m]m-[d]d hh:mm:ss[.f...]

  TelegramProfile:
    properties:
      chat_id: string

  UserPreferences:
    properties:
      preferred_channel: optional<Channel>
      channel_preferences: optional<ChannelPreferences>

  Channel:
    enum:
      - VOICE
      - PUSH
      - SMS
      - EMAIL
      - WHATSAPP
      - WEBHOOK
      - SLACK
      - IN_APP
      - TELEGRAM

  ChannelPreferences:
    properties:
      sms: optional<ChannelPreference>
      push: optional<ChannelPreference>
      whatsapp: optional<ChannelPreference>
      email: optional<ChannelPreference>
      slack: optional<ChannelPreference>
      voice: optional<ChannelPreference>
      teams: optional<ChannelPreference>

  ChannelPreference:
    properties:
      disabled: boolean
